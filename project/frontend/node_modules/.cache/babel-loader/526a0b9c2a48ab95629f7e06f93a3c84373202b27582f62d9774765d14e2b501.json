{"ast":null,"code":"import axios from 'axios';\nimport { APP_CONFIG } from '../config/constants';\nconst api = axios.create({\n  baseURL: APP_CONFIG.API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-User-Login': APP_CONFIG.CURRENT_USER\n  }\n});\nexport const heimdallService = {\n  simulateThreatDetection: () => api.post('/api/simulate/heimdall'),\n  getThreatsHistory: () => api.get('/api/threats/history'),\n  getThreatAnalytics: () => api.get('/api/threats/analytics'),\n  analyzeNetwork: () => api.post('/api/analyze/network')\n};\nexport const vaultService = {\n  simulateEncryption: filename => api.post('/api/simulate/vault', {\n    filename\n  }),\n  getEncryptedFiles: () => api.get('/api/vault/files'),\n  decryptFile: fileId => api.post(`/api/vault/decrypt/${fileId}`)\n};\nexport const privacyService = {\n  toggleFieldMask: (field, isMasked) => api.post('/api/simulate/privacy', {\n    field,\n    isMasked\n  }),\n  getPrivacySettings: () => api.get('/api/privacy/settings'),\n  getPrivacyScore: () => api.get('/api/privacy/score'),\n  updatePrivacyPolicy: settings => api.post('/api/privacy/settings', settings)\n};\nexport const phalanxService = {\n  getTrainingModules: () => api.get('/api/training/modules'),\n  startSimulation: moduleId => api.post(`/api/training/start/${moduleId}`),\n  submitAnswer: (moduleId, answer) => api.post(`/api/training/submit/${moduleId}`, {\n    answer\n  })\n};\nexport const phishingService = {\n  analyzeContent: text => api.post('/api/phishing/analyze', {\n    text\n  }),\n  checkSpamLink: url => api.post('/api/spam/check', {\n    url\n  })\n};\nexport const sentryService = {\n  getDevices: () => api.get('/api/sentry/devices'),\n  isolateDevice: deviceId => api.post(`/api/sentry/isolate/${deviceId}`),\n  scanNetwork: () => api.post('/api/sentry/scan'),\n  getDeviceStatus: deviceId => api.get(`/api/sentry/status/${deviceId}`)\n};\nexport const securityService = {\n  getSecurityAudit: () => api.get('/api/security/audit'),\n  checkPasswordStrength: password => api.post('/api/password/strength', {\n    password\n  })\n};","map":{"version":3,"names":["axios","APP_CONFIG","api","create","baseURL","API_BASE_URL","headers","CURRENT_USER","heimdallService","simulateThreatDetection","post","getThreatsHistory","get","getThreatAnalytics","analyzeNetwork","vaultService","simulateEncryption","filename","getEncryptedFiles","decryptFile","fileId","privacyService","toggleFieldMask","field","isMasked","getPrivacySettings","getPrivacyScore","updatePrivacyPolicy","settings","phalanxService","getTrainingModules","startSimulation","moduleId","submitAnswer","answer","phishingService","analyzeContent","text","checkSpamLink","url","sentryService","getDevices","isolateDevice","deviceId","scanNetwork","getDeviceStatus","securityService","getSecurityAudit","checkPasswordStrength","password"],"sources":["C:/Users/ishan/Downloads/project (3)/project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { APP_CONFIG } from '../config/constants';\n\nconst api = axios.create({\n  baseURL: APP_CONFIG.API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-User-Login': APP_CONFIG.CURRENT_USER\n  }\n});\n\nexport const heimdallService = {\n  simulateThreatDetection: () => api.post('/api/simulate/heimdall'),\n  getThreatsHistory: () => api.get('/api/threats/history'),\n  getThreatAnalytics: () => api.get('/api/threats/analytics'),\n  analyzeNetwork: () => api.post('/api/analyze/network')\n};\n\nexport const vaultService = {\n  simulateEncryption: (filename) => api.post('/api/simulate/vault', { filename }),\n  getEncryptedFiles: () => api.get('/api/vault/files'),\n  decryptFile: (fileId) => api.post(`/api/vault/decrypt/${fileId}`)\n};\n\nexport const privacyService = {\n  toggleFieldMask: (field, isMasked) => \n    api.post('/api/simulate/privacy', { field, isMasked }),\n  getPrivacySettings: () => api.get('/api/privacy/settings'),\n  getPrivacyScore: () => api.get('/api/privacy/score'),\n  updatePrivacyPolicy: (settings) => api.post('/api/privacy/settings', settings)\n};\n\nexport const phalanxService = {\n  getTrainingModules: () => api.get('/api/training/modules'),\n  startSimulation: (moduleId) => api.post(`/api/training/start/${moduleId}`),\n  submitAnswer: (moduleId, answer) => api.post(`/api/training/submit/${moduleId}`, { answer })\n};\n\nexport const phishingService = {\n  analyzeContent: (text) => api.post('/api/phishing/analyze', { text }),\n  checkSpamLink: (url) => api.post('/api/spam/check', { url }),\n};\n\nexport const sentryService = {\n  getDevices: () => api.get('/api/sentry/devices'),\n  isolateDevice: (deviceId) => api.post(`/api/sentry/isolate/${deviceId}`),\n  scanNetwork: () => api.post('/api/sentry/scan'),\n  getDeviceStatus: (deviceId) => api.get(`/api/sentry/status/${deviceId}`)\n};\n\nexport const securityService = {\n  getSecurityAudit: () => api.get('/api/security/audit'),\n  checkPasswordStrength: (password) => api.post('/api/password/strength', { password })\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}